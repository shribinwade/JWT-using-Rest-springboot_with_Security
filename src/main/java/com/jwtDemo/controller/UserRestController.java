package com.jwtDemo.controller;

import java.security.Principal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.jwtDemo.JWT.JwtUtils;
import com.jwtDemo.Service.IUserService;
import com.jwtDemo.bindings.UserRequest;
import com.jwtDemo.bindings.UserResponse;
import com.jwtDemo.entities.User;

import io.jsonwebtoken.Claims;

@RestController
@RequestMapping(path = "/user")
public class UserRestController {

	@Autowired
	private IUserService service;

	@Autowired
	private JwtUtils utils;
	
	@Autowired
	private AuthenticationManager authenticateManager;

	// 1. save User data in database
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(@RequestBody User user) {
		Integer id = service.saveUser(user);
		String body = "User " + id + " saved";
		return new ResponseEntity<String>(body, HttpStatus.OK);
		// short form
		// return ResponseEntity.ok(body);
	}

	// 2. Validate user and Generate Token (Login)
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest request) {

		//validate un/pwd with database
		authenticateManager.authenticate(new UsernamePasswordAuthenticationToken(request.getUsername(),request.getPassword() ));
		
		String token = utils.generateToken(request.getUsername());

		Claims claims = utils.getClaims(token);
		System.out.println(
				"ID " + claims.getId() + "Token Issuer: " + claims.getIssuer() + " Username: " + claims.getSubject()
						+ " Issued On: " + claims.getIssuedAt() + " " + "exprired on:" + claims.getExpiration());
		return ResponseEntity.ok(new UserResponse(token, "Success! Generated By shrihari"));
	}
	
	//3. after Login only
	@PostMapping("/welcome")
	public ResponseEntity<String > dashboard(Principal p){
		return ResponseEntity.ok("welcome to dashboard user "+p.getName());
	}

}
